---
import Main from "../layouts/Main.astro";
---

<Main>
    <main>
        <div id="funCanvas"></div>
    </main>
</Main>

<style>
    #funCanvas {
        height: 512;
        width: 512;
    }
</style>

<script>
    /// --------------------------
    ///         p5.js Code
    /// --------------------------
    interface Point {
        xPos: number;
        yPos: number;
    }
    const PI = Math.PI;
    function degToRad(degrees) {
        const ratio = 180 / PI;
        return degrees / ratio;
    }

    function startSketch() {
        // p is a p5js instance
        const sketch = function (p: any) {
            const fCParent = document.getElementById("funCanvas");
            if (!fCParent) {
                console.log("No canvas parent element found.");
                return;
            }
            const wide = 512;
            const high = 512;

            const buffer = 0.2;
            const start = 0.1;
            const finish = 0.6;
            const speed = 1.5;
            const dotWidth = 10;

            const createPoint: () => Point = function () {
                return {
                    xPos: Math.random() * (wide - 2 * dotWidth) + dotWidth,
                    yPos: -high * buffer + Math.random() * -50,
                };
            };

            const drawArc = (radius, stroke, start, stop, ext = false) => {
                p.noFill();
                p.stroke(0);
                p.strokeWeight(stroke);
                p.strokeCap(p.SQUARE);
                p.arc(
                    256,
                    256,
                    radius,
                    radius,
                    degToRad(start - 0.5),
                    degToRad(stop + 0.5),
                );

                if (ext) {
                    // draw extension
                    p.stroke(0);
                    p.strokeWeight(stroke);
                    p.strokeCap(p.SQUARE);
                    p.line(
                        256,
                        radius / 2 + 256 - 0.25,
                        512,
                        radius / 2 + 256 - 0.25,
                    );
                }
            };

            const pointArray: Point[] = [];

            p.setup = function () {
                const funCanvas = p.createCanvas(wide, high);
                funCanvas.parent(fCParent);

                pointArray.push(createPoint());
            };

            p.draw = function () {
                p.clear();
                p.background(200);

                const startRadius = 300;
                const startDegree = 135;
                const radiusGap = 30;
                const startDegreeGap = -29;
                for (let i = 0; i < 3; i++) {
                    // if (i < 2) continue;
                    const radius = startRadius + i * 20 + i * radiusGap;
                    const start = startDegree + i * startDegreeGap;
                    // drawArc(radius, start);
                    if (i === 0) {
                        drawArc(radius, 20, start, start + 180, false);
                    } else {
                        drawArc(radius, 20, 90, start + 180, true);
                    }
                }
            };
        };
        // @ts-ignore
        const myp5 = new p5(sketch);
    }

    // Start p5.js Sketch
    startSketch();
</script>
